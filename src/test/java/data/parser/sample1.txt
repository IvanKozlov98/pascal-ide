FILE
  PascalSimpleNode(PROGRAM_HEADING)
    PsiElement(PascalTokenType.PROGRAM)('PROGRAM')
    PsiWhiteSpace(' ')
    PascalRefIdentifier(IDENTIFIER)
      PsiElement(PascalTokenType.ID)('posneg')
  PsiElement(PascalTokenType.SEMICOLON)(';')
  PsiWhiteSpace('\n\n')
  PascalSimpleNode(BLOCK)
    PascalSimpleNode(DECLARATION)
      PsiElement(PascalTokenType.VAR)('VAR')
      PsiWhiteSpace('\n ')
      PascalSimpleNode(VARIABLE_DECLARATION)
        PascalSimpleNode(PARAMETERS)
          PascalRefIdentifier(IDENTIFIER)
            PsiElement(PascalTokenType.ID)('no')
        PsiWhiteSpace(' ')
        PsiElement(PascalTokenType.COLON)(':')
        PsiWhiteSpace(' ')
        PascalSimpleNode(TYPE)
          PsiElement(PascalTokenType.INTEGER)('INTEGER')
      PsiElement(PascalTokenType.SEMICOLON)(';')
    PsiWhiteSpace('\n\n')
    PascalSimpleNode(STATEMENT_PART)
      PsiElement(PascalTokenType.BEGIN)('BEGIN')
      PsiWhiteSpace('\n  ')
      PascalSimpleNode(STATEMENT_SEQ)
        PascalSimpleNode(STATEMENT)
          PascalSimpleNode(PROCEDURE_CALLING)
            PascalRefIdentifier(IDENTIFIER)
              PsiElement(PascalTokenType.ID)('Write')
            PascalSimpleNode(PARAMETER_LIST)
              PsiElement(PascalTokenType.LPAREN)('(')
              PascalSimpleNode(EXPRESSION)
                PascalSimpleNode(SHIFT_EXPRESSION)
                  PascalSimpleNode(SIMPLE_EXPRESSION)
                    PascalSimpleNode(TERM)
                      PascalSimpleNode(FACTOR)
                        PascalSimpleNode(STRING)
                          PsiElement(PascalTokenType.STRING)(''Enger a number:'')
              PsiElement(PascalTokenType.RPAREN)(')')
        PsiElement(PascalTokenType.SEMICOLON)(';')
        PsiWhiteSpace('\n  ')
        PascalSimpleNode(STATEMENT)
          PascalSimpleNode(PROCEDURE_CALLING)
            PascalRefIdentifier(IDENTIFIER)
              PsiElement(PascalTokenType.ID)('Readln')
            PascalSimpleNode(PARAMETER_LIST)
              PsiElement(PascalTokenType.LPAREN)('(')
              PascalSimpleNode(EXPRESSION)
                PascalSimpleNode(SHIFT_EXPRESSION)
                  PascalSimpleNode(SIMPLE_EXPRESSION)
                    PascalSimpleNode(TERM)
                      PascalSimpleNode(FACTOR)
                        PascalRefIdentifier(IDENTIFIER)
                          PsiElement(PascalTokenType.ID)('no')
              PsiElement(PascalTokenType.RPAREN)(')')
        PsiElement(PascalTokenType.SEMICOLON)(';')
        PsiWhiteSpace('\n\n  ')
        PascalSimpleNode(STATEMENT)
          PascalSimpleNode(IF_STATEMENT)
            PsiElement(PascalTokenType.IF)('IF')
            PsiWhiteSpace(' ')
            PascalSimpleNode(EXPRESSION)
              PascalSimpleNode(SHIFT_EXPRESSION)
                PascalSimpleNode(SIMPLE_EXPRESSION)
                  PascalSimpleNode(TERM)
                    PascalSimpleNode(FACTOR)
                      PsiElement(PascalTokenType.LPAREN)('(')
                      PascalSimpleNode(EXPRESSION)
                        PascalSimpleNode(SHIFT_EXPRESSION)
                          PascalSimpleNode(SIMPLE_EXPRESSION)
                            PascalSimpleNode(TERM)
                              PascalSimpleNode(FACTOR)
                                PascalRefIdentifier(IDENTIFIER)
                                  PsiElement(PascalTokenType.ID)('no')
                        PsiWhiteSpace(' ')
                        PsiElement(PascalTokenType.GT)('>')
                        PsiWhiteSpace(' ')
                        PascalSimpleNode(SHIFT_EXPRESSION)
                          PascalSimpleNode(SIMPLE_EXPRESSION)
                            PascalSimpleNode(TERM)
                              PascalSimpleNode(FACTOR)
                                PascalSimpleNode(NUM)
                                  PsiElement(PascalTokenType.INT)('0')
                      PsiElement(PascalTokenType.RPAREN)(')')
            PsiWhiteSpace(' ')
            PsiElement(PascalTokenType.THEN)('THEN')
            PsiWhiteSpace('\n   ')
            PascalSimpleNode(STATEMENT)
              PascalSimpleNode(PROCEDURE_CALLING)
                PascalRefIdentifier(IDENTIFIER)
                  PsiElement(PascalTokenType.ID)('Writeln')
                PascalSimpleNode(PARAMETER_LIST)
                  PsiElement(PascalTokenType.LPAREN)('(')
                  PascalSimpleNode(EXPRESSION)
                    PascalSimpleNode(SHIFT_EXPRESSION)
                      PascalSimpleNode(SIMPLE_EXPRESSION)
                        PascalSimpleNode(TERM)
                          PascalSimpleNode(FACTOR)
                            PascalSimpleNode(STRING)
                              PsiElement(PascalTokenType.STRING)(''You enter Positive Number'')
                  PsiElement(PascalTokenType.RPAREN)(')')
            PsiWhiteSpace('\n  ')
            PsiElement(PascalTokenType.ELSE)('ELSE')
            PsiWhiteSpace('\n    ')
            PascalSimpleNode(STATEMENT)
              PascalSimpleNode(IF_STATEMENT)
                PsiElement(PascalTokenType.IF)('IF')
                PsiWhiteSpace(' ')
                PascalSimpleNode(EXPRESSION)
                  PascalSimpleNode(SHIFT_EXPRESSION)
                    PascalSimpleNode(SIMPLE_EXPRESSION)
                      PascalSimpleNode(TERM)
                        PascalSimpleNode(FACTOR)
                          PsiElement(PascalTokenType.LPAREN)('(')
                          PascalSimpleNode(EXPRESSION)
                            PascalSimpleNode(SHIFT_EXPRESSION)
                              PascalSimpleNode(SIMPLE_EXPRESSION)
                                PascalSimpleNode(TERM)
                                  PascalSimpleNode(FACTOR)
                                    PascalRefIdentifier(IDENTIFIER)
                                      PsiElement(PascalTokenType.ID)('no')
                            PsiWhiteSpace(' ')
                            PsiElement(PascalTokenType.LT)('<')
                            PsiWhiteSpace(' ')
                            PascalSimpleNode(SHIFT_EXPRESSION)
                              PascalSimpleNode(SIMPLE_EXPRESSION)
                                PascalSimpleNode(TERM)
                                  PascalSimpleNode(FACTOR)
                                    PascalSimpleNode(NUM)
                                      PsiElement(PascalTokenType.INT)('0')
                          PsiElement(PascalTokenType.RPAREN)(')')
                PsiWhiteSpace(' ')
                PsiElement(PascalTokenType.THEN)('THEN')
                PsiWhiteSpace('\n     ')
                PascalSimpleNode(STATEMENT)
                  PascalSimpleNode(PROCEDURE_CALLING)
                    PascalRefIdentifier(IDENTIFIER)
                      PsiElement(PascalTokenType.ID)('writeln')
                    PascalSimpleNode(PARAMETER_LIST)
                      PsiElement(PascalTokenType.LPAREN)('(')
                      PascalSimpleNode(EXPRESSION)
                        PascalSimpleNode(SHIFT_EXPRESSION)
                          PascalSimpleNode(SIMPLE_EXPRESSION)
                            PascalSimpleNode(TERM)
                              PascalSimpleNode(FACTOR)
                                PascalSimpleNode(STRING)
                                  PsiElement(PascalTokenType.STRING)(''You enter Negative number'')
                      PsiElement(PascalTokenType.RPAREN)(')')
      PsiWhiteSpace('\n')
      PsiElement(PascalTokenType.END)('END')